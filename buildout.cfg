[buildout]
extends =
    http://grok.zope.org/releaseinfo/1.4.1/versions.cfg
    versions.cfg
extends-cache = extends-cache
include-site-packages = false
develop = .
unzip = true
parts =
    app
    merlot_server
    paster_debug_ini
    paster_deploy_ini
    i18n
    mkdirs
    site_zcml
    test
    zope_conf_debug
    zope_conf_deploy
    zpasswd
    interactive_debugger
    omelette
    sphinx
newest = false
versions = versions
extensions = buildout.dumppickedversions

[app]
recipe = zc.recipe.egg
eggs = Merlot
       z3c.evalexception>=2.0
       Paste
       PasteScript
       PasteDeploy
       zope.i18n [compile]
       ipdb
interpreter = python-console

# This section generates a script named 'merlot' in the bin directory that you
# can use to start the server. It's using the debug configuration for
# PasteDeploy, make sure you change it to the deployment configuration in a
# production environment.
[merlot_server]
recipe = collective.recipe.template
inline =
    #!/bin/bash
    export zope_i18n_compile_mo_files=True
    paster serve ${paster_debug_ini:output}
output = ${buildout:bin-directory}/merlot
mode = 755

[paster_deploy_ini]
recipe = collective.recipe.template
input = etc/deploy.ini.in
output = ${buildout:parts-directory}/etc/deploy.ini
host = 127.0.0.1
port = 8080

[paster_debug_ini]
recipe = collective.recipe.template
input = etc/debug.ini.in
output = ${buildout:parts-directory}/etc/debug.ini
host = 0.0.0.0
port = 8080

# This section named so that the i18n scripts are called bin/i18n...
[i18n]
recipe = z3c.recipe.i18n:i18n
packages = merlot
eggs = merlot
domain = merlot
output = merlot/locales
zcml =

[mkdirs]
recipe = z3c.recipe.mkdir
paths =
    ${zope_conf:filestorage}
    ${zope_conf:logfiles}
    ${zope_conf:blobstorage}

[site_zcml]
recipe = collective.recipe.template
input = etc/site.zcml.in
output = ${buildout:parts-directory}/etc/site.zcml

[test]
recipe = zc.recipe.testrunner
eggs = Merlot
defaults = ['--exit-with-status', '--auto-color', '--auto-progress', '-v']

[zope_conf]
input = etc/zope.conf.in
filestorage = ${buildout:directory}/var/filestorage
blobstorage = ${buildout:directory}/var/blobstorage
logfiles = ${buildout:directory}/var/log
extra =
# 'extra' is copied verbatim. Use it for product config sections and so.

[zope_conf_debug]
<= zope_conf
recipe = collective.recipe.template
output = ${buildout:parts-directory}/etc/zope.debug.conf
devmode = on

[zope_conf_deploy]
<= zope_conf
recipe = collective.recipe.template
output = ${buildout:parts-directory}/etc/zope.deploy.conf
devmode = off

# This section is named so that the zpasswd utility is
# called 'zpasswd'
[zpasswd]
recipe = z3c.recipe.dev:script
eggs =
  Merlot
  zope.password
module = zope.password.zpasswd
method = main

[interactive_debugger]
recipe = z3c.recipe.dev:script
eggs = Merlot
module = grokcore.startup.startup
method = interactive_debug_prompt
arguments = zope_conf="${zope_conf_debug:output}"

# Creates a unified directory structure (parts/omelette) of installed packages,
# symlinking to the actual contents, in order to ease navigation. 
[omelette]
recipe = collective.recipe.omelette
eggs = ${app:eggs}

# Sphinx is a tool to create documentation. To build the Merlot documentation
# just run "bin/sphinx-build docs-source/ docs" from the buildout root and the
# documentation will be created in the docs directory in HTML format.
[sphinx]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/docs-source
build = ${buildout:directory}/docs
extra-paths = ${buildout:directory}
eggs =
    ${app:eggs}
    repoze.sphinx.autointerface
